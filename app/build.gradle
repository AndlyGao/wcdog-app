apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'
import com.android.builder.core.BuilderConstants

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        resConfigs "zh"
        multiDexEnabled true
        renderscriptTargetApi 23
        renderscriptSupportModeEnabled true

        ndk {
            abiFilters "armeabi"
        }

        javaCompileOptions { annotationProcessorOptions { includeCompileClasspath = true } }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

//    splits {
//        abi {
//            enable true
//            reset()
//            include 'x86', 'armeabi-v7a', 'x86_64'
//            universalApk true
//        }
//    }

    //apk名字,AS3.0后outputFile变为只读
    android.applicationVariants.all { variant ->
        def buildTypeName = variant.buildType.name
        if (buildTypeName.equals(BuilderConstants.DEBUG)) {
            //定义debug版本的apk文件名
            variant.outputs.all { output ->
                def outputFile = output.outputFile
                if (outputFile != null && outputFile.name.endsWith('.apk')) {
                    def fileName = "app_wcdog_debug.apk"
                    outputFileName = fileName
                }
            }
            return
        }

        variant.outputs.all { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def fileName = "app_wcdog_release.apk"
                outputFileName = fileName
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.12'
    //base
    implementation rootProject.ext.dependencies["appcompat-v7"]
    implementation rootProject.ext.dependencies["design"]
    implementation rootProject.ext.dependencies["recyclerview-v7"]
    implementation rootProject.ext.dependencies["cardview-v7"]
    //ui
    implementation rootProject.ext.dependencies["material-calendarview"]
    implementation rootProject.ext.dependencies["materialsearchview"]
    implementation rootProject.ext.dependencies["multiline-collapsingtoolbar"]
    implementation rootProject.ext.dependencies["PhotoView"]
    implementation rootProject.ext.dependencies["glide-transformations"]
    implementation rootProject.ext.dependencies["html-textview"]
    implementation rootProject.ext.dependencies["constraint-layout"]
    implementation rootProject.ext.dependencies["SmartRefreshLayout"]
    implementation rootProject.ext.dependencies["matisse"]
    implementation rootProject.ext.dependencies["BaseRecyclerViewAdapterHelper"]
    implementation rootProject.ext.dependencies["bottom-bar"]
    implementation rootProject.ext.dependencies["shinebutton"]
    implementation rootProject.ext.dependencies["banner"]
    implementation rootProject.ext.dependencies["flycoTabLayout"]
    implementation rootProject.ext.dependencies["material-dialogs"]
    //rx
    implementation rootProject.ext.dependencies["rxjava"]
    implementation rootProject.ext.dependencies["rxandroid"]
    //network
    implementation rootProject.ext.dependencies["gson"]
    implementation rootProject.ext.dependencies["retrofit"]
    implementation rootProject.ext.dependencies["retrofit-converter-gson"]
    implementation rootProject.ext.dependencies["retrofit-adapter-rxjava2"]
    implementation rootProject.ext.dependencies["okhttp"]
    implementation rootProject.ext.dependencies["okhttp-logging-interceptor"]
    implementation rootProject.ext.dependencies["glide"]
    implementation rootProject.ext.dependencies["glide-okhttp3-integration"]
    annotationProcessor rootProject.ext.dependencies["glide-compiler"]
    //di
    implementation rootProject.ext.dependencies["dagger"]
    implementation rootProject.ext.dependencies["dagger-compiler"]
    implementation rootProject.ext.dependencies["butterknife"]
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]
    compileOnly rootProject.ext.dependencies["annotation"]
    //other
    implementation rootProject.ext.dependencies["multidex"]
    implementation rootProject.ext.dependencies["logger"]
    implementation rootProject.ext.dependencies["crashreport"]
    implementation rootProject.ext.dependencies["Luban"]
    implementation rootProject.ext.dependencies["filedownloader"]
    implementation rootProject.ext.dependencies["okdownloadSqlite"]
    implementation rootProject.ext.dependencies["eventbus"]
    implementation rootProject.ext.dependencies["easypermissions"]
    implementation rootProject.ext.dependencies["rxpermissions"]
    //canary
    debugImplementation rootProject.ext.dependencies["blockcanary-android"]
    releaseImplementation rootProject.ext.dependencies["blockcanary-no-op"]
    debugImplementation rootProject.ext.dependencies["leakcanary-android"]
    releaseImplementation rootProject.ext.dependencies["leakcanary-android-no-op"]
    //module
    implementation project(path: ':jiaozivideoplayer')
    implementation project(path: ':ijkplayer')
}

